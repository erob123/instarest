name: CI
on:
  push:
    branches: [ '*' ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ '*' ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11.2]

    runs-on: ${{ matrix.os }}
    permissions:
      pull-requests: write

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432 # exposing 5432 port for application to use
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Test database connection
        run: |
          # for psql
          sudo apt-get install -y postgresql-client
          # Test psql connection
          PGPASSWORD=postgres psql -h localhost -p 5432 -U postgres -d postgres -c "select 1"
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.5.1

      - name: Install project
        run: poetry install --without dev

      - name: Test
        run: ENVIRONMENT=test poetry run pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=instarest tests/ | tee pytest-coverage.txt

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
